a=rnorm(500,60,5)
b=runif(500,0,100)
c=rgamma(500,2)
par(mfrow=c(1,6),
oma = c(5,4,0,0) + 0.1,
mar = c(0,0,1,1) + 0.1)
hist(a,main="(a)", ylab=NULL)
hist(b,main="(b)", ylab=NULL)
hist(c,main="(c)", ylab=NULL)
boxplot(a, main="(1)")
boxplot(b, main="(2)")
boxplot(c, main="(3)")
a=rnorm(500,60,5)
b=runif(500,0,100)
c=rgamma(500,2)
par(mfrow=c(1,6),
mar = c(0,0,1,1) + 0.1)
hist(a,main="(a)", ylab=NULL)
hist(b,main="(b)", ylab=NULL)
hist(c,main="(c)", ylab=NULL)
boxplot(a, main="(1)")
boxplot(b, main="(2)")
boxplot(c, main="(3)")
a=rnorm(500,60,5)
b=runif(500,0,100)
c=rgamma(500,2)
par(mfrow=c(1,6),
oma = c(5,4,0,0) + 0.1,
mar = c(0,0,1,1) + 0.1)
hist(a,main="(a)", ylab=NULL)
hist(b,main="(b)", ylab=NULL)
hist(c,main="(c)", ylab=NULL)
boxplot(a, main="(1)")
boxplot(b, main="(2)")
boxplot(c, main="(3)")
a=rnorm(500,60,5)
b=runif(500,0,100)
c=rgamma(500,2)
par(mfrow=c(1,6),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,1,1) + 0.1)
hist(a,main="(a)", ylab=NULL)
hist(b,main="(b)", ylab=NULL)
hist(c,main="(c)", ylab=NULL)
boxplot(a, main="(1)")
boxplot(b, main="(2)")
boxplot(c, main="(3)")
a=rnorm(1000,60,5)
b=runif(1000,0,100)
c=rgamma(1000,2)
par(mfrow=c(1,6),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,1,1) + 0.1)
hist(a,main="(a)", ylab=NULL)
hist(b,main="(b)", ylab=NULL)
hist(c,main="(c)", ylab=NULL)
boxplot(a, main="(1)")
boxplot(b, main="(2)")
boxplot(c, main="(3)")
dists=list(a,b,c)
shuffle(1:3)
sample(1:3)
sample(1:3)
sample(1:3)
sample(1:3)
a=rnorm(1000,60,5)
b=runif(1000,0,100)
c=rgamma(1000,2)
dists=list(a,b,c)
order=sample(1:3)
par(mfrow=c(1,6),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,1,1) + 0.1)
hist(a,main="(a)", ylab=NULL)
hist(b,main="(b)", ylab=NULL)
hist(c,main="(c)", ylab=NULL)
boxplot(dists[[order[1]]], main="(1)")
boxplot(dists[[order[2]], main="(2)")
a=rnorm(1000,60,5)
b=runif(1000,0,100)
c=rgamma(1000,2)
dists=list(a,b,c)
order=sample(1:3)
par(mfrow=c(1,6),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,1,1) + 0.1)
hist(a,main="(a)", ylab=NULL)
hist(b,main="(b)", ylab=NULL)
hist(c,main="(c)", ylab=NULL)
boxplot(dists[[order[1]]], main="(1)")
boxplot(dists[[order[2]]], main="(2)")
boxplot(dists[[order[3]]], main="(3)")
a=rnorm(1000,60,5)
b=runif(1000,0,100)
c=rgamma(1000,2)
dists=list(a,b,c)
order=sample(1:3)
par(mfrow=c(1,6),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,1,1) + 0.1)
hist(a,main="(a)", ylab=NULL)
hist(b,main="(b)", ylab=NULL)
hist(c,main="(c)", ylab=NULL)
boxplot(dists[[order[1]]], main="(1)")
boxplot(dists[[order[2]]], main="(2)")
boxplot(dists[[order[3]]], main="(3)")
a=rnorm(1000,60,5)
b=runif(1000,0,100)
c=rgamma(1000,2)
dists=list(a,b,c)
order=sample(1:3)
par(mfrow=c(1,6),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,1,1) + 0.1)
hist(a,main="(a)", ylab=NULL)
hist(b,main="(b)", ylab=NULL)
hist(c,main="(c)", ylab=NULL)
boxplot(dists[[order[1]]], main="(1)")
boxplot(dists[[order[2]]], main="(2)")
boxplot(dists[[order[3]]], main="(3)")
a=rnorm(1000,60,5)
b=runif(1000,0,100)
c=rgamma(1000,2)
dists=list(a,b,c)
order=sample(1:3)
par(mfrow=c(1,6),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,1,1) + 0.1)
hist(a,main="(a)", ylab=NULL)
hist(b,main="(b)", ylab=NULL)
hist(c,main="(c)", ylab=NULL)
boxplot(dists[[order[1]]], main="(1)")
boxplot(dists[[order[2]]], main="(2)")
boxplot(dists[[order[3]]], main="(3)")
a=rnorm(1000,60,5)
b=runif(1000,0,100)
c=rgamma(1000,2)
dists=list(a,b,c)
order=sample(1:3)
par(mfrow=c(1,6),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,1,1) + 0.1)
hist(a,main="(a)", ylab=NULL)
hist(b,main="(b)", ylab=NULL)
hist(c,main="(c)", ylab=NULL)
boxplot(dists[[order[1]]], main="(1)")
boxplot(dists[[order[2]]], main="(2)")
boxplot(dists[[order[3]]], main="(3)")
a=rnorm(1000,60,5)
b=runif(1000,0,100)
c=rgamma(1000,2)
dists=list(a,b,c)
order=sample(1:3)
par(mfrow=c(1,6),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,1,1) + 0.1)
hist(a,main="(a)", ylab=NULL)
hist(b,main="(b)", ylab=NULL)
hist(c,main="(c)", ylab=NULL)
boxplot(dists[[order[1]]], main="(1)")
boxplot(dists[[order[2]]], main="(2)")
boxplot(dists[[order[3]]], main="(3)")
a=rnorm(1000,60,5)
b=runif(1000,0,100)
c=rgamma(1000,2)
dists=list(a,b,c)
order=sample(1:3)
par(mfrow=c(1,6),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,1,1) + 0.1)
hist(a,main="(a)", ylab=NULL)
hist(b,main="(b)", ylab=NULL)
hist(c,main="(c)", ylab=NULL)
boxplot(dists[[order[1]]], main="(1)")
boxplot(dists[[order[2]]], main="(2)")
boxplot(dists[[order[3]]], main="(3)")
a=rnorm(1000,60,5)
b=runif(1000,0,100)
c=rgamma(1000,2)
dists=list(a,b,c)
order=sample(1:3)
par(mfrow=c(1,6),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,1,1) + 0.1)
hist(a,main="(a)", ylab=NULL)
hist(b,main="(b)", ylab=NULL)
hist(c,main="(c)", ylab=NULL)
boxplot(dists[[order[1]]], main="(1)")
boxplot(dists[[order[2]]], main="(2)")
boxplot(dists[[order[3]]], main="(3)")
a=rnorm(1000,60,5)
b=runif(1000,0,100)
c=rgamma(1000,2)
dists=list(a,b,c)
order=sample(1:3)
par(mfrow=c(1,6),
oma = c(5,4,0,0) + 0.1,
mar = c(2,1,1,1) + 0.1)
hist(a,main="(a)", ylab=NULL)
hist(b,main="(b)", ylab=NULL)
hist(c,main="(c)", ylab=NULL)
boxplot(dists[[order[1]]], main="(1)")
boxplot(dists[[order[2]]], main="(2)")
boxplot(dists[[order[3]]], main="(3)")
a=rnorm(1000,60,5)
b=runif(1000,0,100)
c=rgamma(1000,2)
dists=list(a,b,c)
order=sample(1:3)
par(mfrow=c(1,6),
oma = c(5,4,0,0) + 0.1,
mar = c(1,2,1,1) + 0.1)
hist(a,main="(a)", ylab=NULL)
hist(b,main="(b)", ylab=NULL)
hist(c,main="(c)", ylab=NULL)
boxplot(dists[[order[1]]], main="(1)")
boxplot(dists[[order[2]]], main="(2)")
boxplot(dists[[order[3]]], main="(3)")
a=rnorm(1000,60,5)
b=runif(1000,0,100)
c=rgamma(1000,2)
dists=list(a,b,c)
order=sample(1:3)
par(mfrow=c(1,6),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,2,1) + 0.1)
hist(a,main="(a)", ylab=NULL)
hist(b,main="(b)", ylab=NULL)
hist(c,main="(c)", ylab=NULL)
boxplot(dists[[order[1]]], main="(1)")
boxplot(dists[[order[2]]], main="(2)")
boxplot(dists[[order[3]]], main="(3)")
a=rnorm(1000,60,5)
b=runif(1000,0,100)
c=rgamma(1000,2)
dists=list(a,b,c)
order=sample(1:3)
par(mfrow=c(1,6),
oma = c(5,4,0,0) + 0.1,
mar = c(1,1,2,1) + 0.1)
hist(a,main="(a)", ylab=NULL)
hist(b,main="(b)", ylab=NULL)
hist(c,main="(c)", ylab=NULL)
boxplot(dists[[order[1]]], main="(1)")
boxplot(dists[[order[2]]], main="(2)")
boxplot(dists[[order[3]]], main="(3)")
#1a
install.packages("aplore3")
library(aplore3)
csv
icu
write.csv(file=file.choose(), icu)
install.packages("spData")
library(spData)
afcon
write.csv(afcon, file=file.choose())
auckland
write.csv(auckland, file=file.choose())
lnd
elev
raster(elev)
matrix(elev)
matrix(elev, nrow=6)
elev
elev$layer
str(elev)
install.packages("insee")
library(insee)
library(insee)
library(sp)
infoCom
head(infoCOm)
get_insee_dataset(infoCom)
get_dataset_list()
get_idbank_list
url <- url("http://www.people.fas.harvard.edu/~zhukov/Datasets.RData")
load(url)
ls()
crime
crimeData <- rbind(crime$LONG, crime$LAT)
write.csv(crimeData, "crime.csv")
crimeData
crimeData <- crime[,c(3,2)]
crimeData
write.csv(crimeData, "crime.csv")
write.csv(crimeData, file="crime.csv")
write.csv(crimeData, file=file.choose())
head(volcano)[,1:6]          ## Take a look at the data structure
dim(volcano)            ## 87 x 61 grid of elevation points
z <- volcano            ## Height Variable
x <- 10*(1:nrow(z))     ## 10 Meter Spacing (S-N)
y <- 10*(1:ncol(z))     ## 10 Meter Spacing (E-W)
## Contour Plot
par(mar=rep(0.5,4))
contour(x, y, z, levels=seq(from=min(z), to=max(z), by=10),axes=F)
dev.off()
## Gradient
par(mar=rep(0.5,4))
image(x, y, z, col=terrain.colors(100), axes=F)
dev.off()
## Gradient + Countour
par(mar=rep(0.5,4))
image(x, y, z, col=terrain.colors(100), axes=F)
contour(x, y, z, levels=seq(from=min(z), to=max(z), by=10),axes=F, add=T)
dev.off()
## 3-D Plot
par(mar=rep(0,4))
persp(x,y,z,theta=120,phi=15,scale=F,axes=F)
dev.off()
par(mar=rep(0.5,4))
contour(x, y, z, levels=seq(from=min(z), to=max(z), by=10),axes=F)
write.csv(volcano, file.choose())
percentile(1:10,.42)
quantile(1:100, .42)
knitr::opts_chunk$set(echo = TRUE, eval=TRUE)
#-------------------------------------------------------------------
#Run this block to load all datasets for this assignment.
#-------------------------------------------------------------------
load("datasets/nursing.home.Rdata")
load("datasets/adolescent.fertility.Rdata")
load("datasets/water.Rdata")
library(oibiostat)
data(famuss)
load("datasets/stenosis.Rdata")
table(famuss$actn3.r577x~famuss$race)
table(famuss$actn3.r577x,famuss$race)
plot(famuss$age ~ famuss$actn3.r577x)
table(stenosis$smoke, stenosis$disease)
table(stenosis$smoke, stenosis$disease, prop=TRUE)
?table
table(stenosis$smoke, stenosis$disease, prop=TRUE)/nrow(stenosis)
table(stenosis$smoke, stenosis$disease, prop=TRUE)
table(stenosis$smoke, stenosis$disease)/nrow(stenosis)
margin.table(table(stenosis$smoke, stenosis$disease))
margin(table(stenosis$smoke, stenosis$disease))
margins(table(stenosis$smoke, stenosis$disease))
prop.table(table(stenosis$smoke, stenosis$disease))
library(emplik)
install.packages("emplik")
library(empkil)
library(emplik)
data("myeloma")
myeloma
write.csv(myeloma, file.choose())
pts1<-as.data.frame(rpoispp(50))
pts1$Process="Random"
pts2<-as.data.frame(rMatClust(5, 0.05, 10))
pts2$Process="Aggregate"
pts3<-as.data.frame(rMaternII(200,0.1))
pts3$Process="Regular"
pointsExample <- rbind(pts1, pts2,pts3)
library("spatstat")
library("sp")
pts1<-as.data.frame(rpoispp(50))
pts1$Process="Random"
pts2<-as.data.frame(rMatClust(5, 0.05, 10))
pts2$Process="Aggregate"
pts3<-as.data.frame(rMaternII(200,0.1))
pts3$Process="Regular"
pointsExample <- rbind(pts1, pts2,pts3)
write.csv(pointsExample, row.names=FALSE, file=file.choose())
library(rgdal) #To import MIF/MID files
library(maptools) #To import files Shapefile
library(tripack) #To calculate neighbours based on distance
library(spdep)
#Spatial File Import
arr75 <- readOGR("~/ArmF.TAB", "ArmF")
library(smacpod)
data(grave)
grave
str(grave)
summary(grave)
library(rgdal)
library(tmap)
# Load precipitation data
z <- gzcon(url("https://github.com/mgimond/Spatial/raw/main/Data/precip.rds"))
P <- readRDS(z)
# Load Texas boudary map
z <- gzcon(url("https://github.com/mgimond/Spatial/raw/main/Data/texas.rds"))
W <- readRDS(z)
# Replace point boundary extent with that of Texas
P@bbox <- W@bbox
tm_shape(W) + tm_polygons() +
tm_shape(P) +
tm_dots(col="Precip_in", palette = "RdBu", auto.palette.mapping = FALSE,
title="Sampled precipitation \n(in inches)", size=0.7) +
tm_text("Precip_in", just="left", xmod=.5, size = 0.7) +
tm_legend(legend.outside=TRUE)
install.packages('tmap')
library(rgdal)
library(tmap)
# Load precipitation data
z <- gzcon(url("https://github.com/mgimond/Spatial/raw/main/Data/precip.rds"))
P <- readRDS(z)
# Load Texas boudary map
z <- gzcon(url("https://github.com/mgimond/Spatial/raw/main/Data/texas.rds"))
W <- readRDS(z)
# Replace point boundary extent with that of Texas
P@bbox <- W@bbox
tm_shape(W) + tm_polygons() +
tm_shape(P) +
tm_dots(col="Precip_in", palette = "RdBu", auto.palette.mapping = FALSE,
title="Sampled precipitation \n(in inches)", size=0.7) +
tm_text("Precip_in", just="left", xmod=.5, size = 0.7) +
tm_legend(legend.outside=TRUE)
P
P$Precip_in
str(P)
tm_shape(W) + tm_polygons() +
tm_shape(P) +
tm_dots(col="Precip_in", palette = "RdBu", auto.palette.mapping = FALSE,
title="Sampled precipitation \n(in inches)", size=0.7) +
tm_text("Precip_in", just="left", xmod=.5, size = 0.7) +
tm_legend(legend.outside=TRUE)
P@coords
cbind(P@coords, P$Precip_in)
str(P)
P@coords.nrs
P@coords
P@coords[,1:2]
points<-P@coords[,1:2]
str(P)
sputm <- SpatialPoints(points, proj4string=CRS("+proj=utm +zone=14 +datum=WGS84"))
spgeo <- spTransform(sputm, CRS("+proj=longlat +datum=WGS84"))
lnlt <- coordinates(spgeo)
lnlt
cbind(ltln, P$Precip_in)
cbind(lnlt, P$Precip_in)
P
SpatialPoints(points, proj4string=CRS("+proj=eqdc +lat_0=39 +lon_0=-96 +lat_1=33 +lat_2=45 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0"))
sputm <- SpatialPoints(points, proj4string=CRS("+proj=eqdc +lat_0=39 +lon_0=-96 +lat_1=33 +lat_2=45 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0"))
spgeo <- spTransform(sputm, CRS("+proj=longlat +datum=WGS84"))
lnlt <- coordinates(spgeo)
plot(lnlt)
SpatialPoints(points)
SpatialPoints(P@coords)
P
cbind(lnlt, P$Precip_in)
W
W@polygons
W@data
str(W)
W@polygons
W@polygons[['coords']]
W@polygons$coords
W@polygons@coords
W@polygons[[1]]
W@polygons[[1]][[1]]
W@polygons[[1]][1]
W@polygons[[1]]["coords"]
W@polygons[[1]]@Polygons[[1]]
W@polygons[[1]]@Polygons[[1]]@coords
texasCoords <- W@polygons[[1]]@Polygons[[1]]@coords
sputm <- SpatialPoints(texasCoords, proj4string=CRS("+proj=eqdc +lat_0=39 +lon_0=-96 +lat_1=33 +lat_2=45 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0"))
spgeo <- spTransform(sputm, CRS("+proj=longlat +datum=WGS84"))
lnlt <- coordinates(spgeo)
lnlt
write.csv(texasCoords, row.names=FALSE, file.choose())
write.csv(lnlt, row.names=FALSE, file.choose())
W
lines(lnlt)
load(file="D:/Dropbox (ASU)/Dropbox (ASU)/Research/POSEIDON/FAD drift/IATTC/buoySingleDayDrifts.RData")
str(buoySingleDayDrifts)
fitU.4 <- lm(drift.u ~ water_u + prev.u +0, data=buoySingleDayDrifts)
fitU.4
summary(fitU.4)
buoySingleDayDrifts <- buoySingleDayDrifts.backup
str(buoySingleDayDrifts.backup)
str(buoySingleDayDrifts[!is.na(buoySingleDayDrifts$water_u),])
knitr::opts_chunk$set(echo = TRUE, eval=TRUE)
18.2/sqrt(45)
sqrt(10)/sqrt(45)
sqrt(45)/sqrt(10)
3150 + c(-1,1)*qnorm(.975)*250/sqrt(50)
3150 + c(-1,1)*qnorm(.975)*250/sqrt(50)
3150 + c(-1,1)*qt(.975,49)*250/sqrt(50)
t=(3150-3250)/(250/sqrt(50))
pt(abs(t),49, lower.tail=FALSE)*2
t=(3150-3250)/(250/sqrt(50))
t
pt(abs(t),49, lower.tail=FALSE)*2
t=(3150-3250)/(250/sqrt(50))
t
pt(abs(t),49, lower.tail=FALSE)*2
147-128
(128+147)/2
#use r as a calculator
x.bar = 137
s = 39
n =64
t.star = qt(0.9755  , df = n - 1)
m = t.star * s/sqrt(n)
x.bar - m; x.bar + m
t.star = qt(0.995  , df = n - 1)
m = t.star * s/sqrt(n)
x.bar - m; x.bar + m
setwd("C:/Users/brpowers/Dropbox (Personal)/Statistics/StatPowers/csv/spatial")
library(maptools)
getinfo.shape("wex10_4.shp")
library(maptools)
getinfo.shape("wex10_4.shp")
ls
read.csv("wex10_4.csv")
london <- readShapePoly("wex10_4.shp")
london <- readShapePoly("wex10_4_simple.shp")
plot(london)
library(maptools)
getinfo.shape("wex10_4_simple.shp")
london_boroughs <- read.csv("wex10_4.csv")
london_merge <- merge(london, london_boroughs,
by="NAME")
london_boroughs
